{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","parentNode","insertBefore","nextSibling","before","append","parent","appendChild","wrap","remove","removeChild","empty","x","array","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","innerText","textContent","html","style","Object","object","key","class","add","className","classList","has","contains","on","eventName","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","siblings","Array","from","next","nodeType","previous","previousSibling","each","nodeList","i","call","index","list"],"mappings":"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","file":"dom.aa155665.js","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n  create(string) {\r\n    const container = document.createElement('template')\r\n    container.innerHTML = string.trim()\r\n    return container.content.firstChild\r\n  },\r\n  after(node, node2) {\r\n    node.parentNode.insertBefore(node2, node.nextSibling)\r\n  },\r\n  before(node, node2) {\r\n    node.parentNode.insertBefore(node2, node)\r\n  },\r\n  append(parent, node) {\r\n    parent.appendChild(node)\r\n  },\r\n  wrap(node, parent) {\r\n    dom.before(node, parent)\r\n    dom.append(parent, node)\r\n  },\r\n  remove(node) {\r\n    node.parentNode.removeChild(node)\r\n    return node\r\n  },\r\n  empty(node) {\r\n    const array = []\r\n    let x = node.firstChild\r\n    while (x) {\r\n      array.push(dom.remove(node.firstChild))\r\n      x = node.firstChild\r\n    }\r\n    return array\r\n  },\r\n  attr(node, name, value) {\r\n    if (arguments.length === 3) {\r\n      node.setAttribute(name, value)\r\n    } else if (arguments.length === 2) {\r\n      return node.getAttribute(name)\r\n    }\r\n  },\r\n  text(node, string) {\r\n    if (arguments.length === 2) {\r\n      if ('innerText' in node) {\r\n        node.innerText = string\r\n      } else {\r\n        node.textContent = string\r\n      }\r\n    } else if (arguments.length === 1) {\r\n      if ('innerText' in node) {\r\n        return node.innerText\r\n      } else {\r\n        return node.textContent\r\n      }\r\n    }\r\n  },\r\n  html(node, string) {\r\n    if (arguments.length === 2) {\r\n      node.innerHTML = string\r\n    } else if (arguments.length === 1) {\r\n      return node.innerHTML\r\n    }\r\n  },\r\n  style(node, name, value) {\r\n    if (arguments.length === 3) {\r\n      node.style[name] = value\r\n    } else if (arguments.length === 2) {\r\n      if (typeof name === 'string') {\r\n        // dom.style(div, 'color')\r\n        return node.style[name]\r\n      } else if (name instanceof Object) {\r\n        // dom.style(div, {color: 'red'})\r\n        const object = name\r\n        for (let key in object) {\r\n          node.style[key] = object[key]\r\n        }\r\n      }\r\n    }\r\n  },\r\n  class: {\r\n    add(node, className) {\r\n      node.classList.add(className)\r\n    },\r\n    remove(node, className) {\r\n      node.classList.remove(className)\r\n    },\r\n    has(node, className) {\r\n      return node.classList.contains(className)\r\n    },\r\n  },\r\n  on(node, eventName, fn) {\r\n    node.addEventListener(eventName, fn)\r\n  },\r\n  off(node, eventName, fn) {\r\n    node.removeEventListener(eventName, fn)\r\n  },\r\n  find(selector, scope) {\r\n    return (scope || document).querySelectorAll(selector)\r\n  },\r\n  parent(node) {\r\n    return node.parentNode\r\n  },\r\n  children(node) {\r\n    return node.children\r\n  },\r\n  siblings(node) {\r\n    return Array.from(node.parentNode.children)\r\n  },\r\n  next(node) {\r\n    let x = node.nextSibling\r\n    while (x && x.nodeType === 3) {\r\n      x = x.nextSibling\r\n    }\r\n    return x\r\n  },\r\n  previous(node) {\r\n    let x = node.previousSibling\r\n    while (x && x.nodeType === 3) {\r\n      x = x.previousSibling\r\n    }\r\n    return x\r\n  },\r\n  each(nodeList, fn) {\r\n    for (let i = 0; i < nodeList.length; i++) {\r\n      fn.call(null, nodeList[i])\r\n    }\r\n  },\r\n  index(node) {\r\n    const list = dom.children(node.parentNode)\r\n    let i\r\n    for (i = 0; i < list.length; i++) {\r\n      if (list[i] === node) {\r\n        break\r\n      }\r\n    }\r\n    return i\r\n  },\r\n}\r\n"]}